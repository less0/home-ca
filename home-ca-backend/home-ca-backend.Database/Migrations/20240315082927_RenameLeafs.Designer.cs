// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using home_ca_backend.Database;

#nullable disable

namespace home_ca_backend.Database.Migrations
{
    [DbContext(typeof(CertificateAuthorityContext))]
    [Migration("20240315082927_RenameLeafs")]
    partial class RenameLeafs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("home_ca_backend.Core.CertificateAuthorityServerAggregate.CertificateAuthority", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CertificateAuthorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("EncryptedCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PemCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PemPrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateAuthorityId");

                    b.ToTable("CertificateAuthority");
                });

            modelBuilder.Entity("home_ca_backend.Core.CertificateAuthorityServerAggregate.Leaf", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CertificateAuthorityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<byte[]>("EncryptedCertificate")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PemCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PemPrivateKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateAuthorityId");

                    b.ToTable("Leaf");
                });

            modelBuilder.Entity("home_ca_backend.Core.CertificateAuthorityServerAggregate.CertificateAuthority", b =>
                {
                    b.HasOne("home_ca_backend.Core.CertificateAuthorityServerAggregate.CertificateAuthority", null)
                        .WithMany("IntermediateCertificateAuthorities")
                        .HasForeignKey("CertificateAuthorityId");
                });

            modelBuilder.Entity("home_ca_backend.Core.CertificateAuthorityServerAggregate.Leaf", b =>
                {
                    b.HasOne("home_ca_backend.Core.CertificateAuthorityServerAggregate.CertificateAuthority", null)
                        .WithMany("Leafs")
                        .HasForeignKey("CertificateAuthorityId");
                });

            modelBuilder.Entity("home_ca_backend.Core.CertificateAuthorityServerAggregate.CertificateAuthority", b =>
                {
                    b.Navigation("IntermediateCertificateAuthorities");

                    b.Navigation("Leafs");
                });
#pragma warning restore 612, 618
        }
    }
}
